{"version":3,"sources":["utils/UserContext.js","utils/API.js","components/LoginForm/index.js","components/Nav/index.js","components/Jumbotron/index.js","utils/googleApi.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","components/DeleteBtn/index.js","pages/Books.js","pages/Detail.js","pages/NoMatch.js","pages/Login.js","components/SignUpForm/index.js","pages/SignUp.js","pages/Logout.js","App.js","index.js"],"names":["UserContext","createContext","email","setEmail","loggedIn","setLoggedIn","axios","get","id","delete","bookData","post","userData","LoginForm","props","useContext","history","useHistory","emailInput","useRef","passwordInput","extraProps","className","emailId","emailHelpId","passwordId","handleSubmit","event","preventDefault","API","current","value","password","then","data","push","catch","err","console","log","onSubmit","htmlFor","ref","type","aria-describedby","Nav","useState","loginExpanded","setLoginExpanded","href","to","onClick","Jumbotron","children","style","height","clear","paddingTop","textAlign","query","process","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Description","Input","FormBtn","marginBottom","DeleteBtn","role","tabIndex","Books","results","setResults","books","setBooks","formObject","setFormObject","loadBooks","res","useEffect","onChange","e","target","name","handleInputChange","placeholder","disabled","search","googleAPI","items","length","book","key","volumeInfo","title","authors","description","bookToSave","author","synopsis","saveBook","class","_id","deleteBook","Detail","setBook","bookid","useParams","NoMatch","aria-label","Login","SignUpForm","SignUp","Logout","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80989a2e.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nconst UserContext = createContext({\n    email: \"\",\n    setEmail: () => {},\n    loggedIn: false,\n    setLoggedIn: () => {}\n});\n\nexport default UserContext;","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function (id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n  testUserRouter: function () {\n    return axios.get(\"/api/user/test\");\n  },\n  login: function (userData) {\n    return axios.post(\"/api/user/login\", userData);\n  },\n  logout: function () {\n    return axios.get(\"/api/user/logout\");\n  },\n  signup: function (userData) {\n    return axios.post(\"/api/user/signup\", userData);\n  },\n  getUser: function () {\n    return axios.get(\"/api/user/data\");\n  },\n};\n","import React, { Fragment, useContext, useRef } from 'react';\nimport \"./style.scss\";\nimport API from '../../utils/API';\nimport UserContext from '../../utils/UserContext';\nimport { useHistory } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n    const { email, setEmail, loggedIn, setLoggedIn } = useContext(UserContext);\n    const history = useHistory();\n    const emailInput = useRef();\n    const passwordInput = useRef();\n    let extraProps = {}\n    if (props.className) {\n        extraProps.className = props.className;\n    }\n    let emailId = props.className ? props.className + \"-login-email\" : \"login-email\";\n    let emailHelpId = props.className ? props.className + \"-login-email-help\" : \"login-email-help\";\n    let passwordId = props.className ? props.className + \"-login-password\" : \"login-password\";\n    const handleSubmit = event => {\n        // if the user hits enter or hits the button, this function will fire\n        event.preventDefault();\n        // console.log(\"submit happened\");\n        // console.log({ email: emailInput.current.value, password: passwordInput.current.value});\n        API.login({ email: emailInput.current.value, password: passwordInput.current.value})\n            .then(data => {\n                // console.log(data);\n                setEmail(data.data.email);\n                setLoggedIn(true);\n                history.push(\"/\");\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n    return (\n        <Fragment>\n            { (() => {\n                if (!loggedIn) {\n                    return (<form {...extraProps} onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor={emailId}>Email address</label>\n                            <input ref={emailInput} type=\"email\" className=\"form-control\" id={emailId} aria-describedby={emailHelpId} />\n                            <small id={emailHelpId} className=\"email-help-text form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor={passwordId}>Password</label>\n                            <input ref={passwordInput} type=\"password\" className=\"form-control\" id={passwordId} />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n                    </form>\n                    );\n                }\n                else {\n                    return <h3>{email}</h3>;\n                }\n            })()\n            }\n        </Fragment>\n    )\n}\n\nexport default LoginForm;","import React, {useState, Fragment, useContext} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../../utils/UserContext\";\nimport LoginForm from \"../LoginForm\";\nimport './style.scss';\n\nfunction Nav() {\n  const [loginExpanded, setLoginExpanded] = useState(false);\n  const {email, loggedIn} = useContext(UserContext);\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        React Reading List\n      </a>\n      { (() => {\n        if(loggedIn){\n          return <p className=\"logged-in-text\">Logged in as {email} <Link to=\"/logout\" onClick={ () => setLoginExpanded(false)}>Logout</Link> </p>;\n        }\n        else{\n          if(!loginExpanded){\n            return <button onClick={ () => setLoginExpanded(true) }>Login</button>;\n          }\n          else{\n            return (\n              <Fragment>\n                <LoginForm className=\"top-menu-login\"/>\n                <button onClick={ () => setLoginExpanded(false) }>X</button>\n              </Fragment>\n            )\n          } \n        }\n      })()}\n      \n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n\nconst key = process.env.REACT_APP_GOOGLE_APIKEY;\n\nexport default {\n  // Gets all books\n  getGoogleBooks: function (query) {\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&key=${key}`);\n  }\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n\nexport function Description({ children }) {\n  return <p>{children}</p>;\n}\n\nexport function Add({ children }) {\n  return <button type=\"button\" class=\"btn btn-info\">{children}</button>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport googleAPI from \"../utils/googleApi\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem, Description } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport DeleteBtn from \"../components/DeleteBtn\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [results, setResults] = useState([])\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  // // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res => \n        setBooks(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(() => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value })\n  };\n\n  function saveBook(book) {\n    const bookToSave = {\n      title: book.volumeInfo.title,\n      author: book.volumeInfo.authors[0],\n      synopsis: book.volumeInfo.description\n    };\n\n      API.saveBook(bookToSave)\n      .then(res => setBooks([res.data, ...books]))\n      .catch(err => console.log(err));\n  }\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.search) {\n      googleAPI.getGoogleBooks(formObject.search)\n        .then(res => setResults(res.data.items))\n        .catch(err => console.log(err));\n    }\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-6\">\n          <Jumbotron>\n            <h1>What Books Should I Read?</h1>\n          </Jumbotron>\n          <form>\n            <Input\n              onChange={(e) => handleInputChange(e)}\n              name=\"search\"\n              placeholder=\"Search for Book\"\n            />\n            <FormBtn\n              disabled={!(formObject.search)}\n              onClick={(e) => handleFormSubmit(e)}\n            >\n              Search Book\n              </FormBtn>\n          </form>\n\n          {results.length ? (\n            <List>\n              {results.map(book => (\n                <ListItem key={book.id}>\n                  <strong>\n                    {book.volumeInfo.title} by {book.volumeInfo.authors[0]}\n                  </strong>\n                  <Description>\n                    {book.volumeInfo.description}\n                  </Description>\n                  <button onClick={() => saveBook(book)} type=\"button\" class=\"btn btn-info\">Add Book</button>\n\n                  {/* <DeleteBtn onClick={() => deleteBook(book._id)} /> */}\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n              <h3>No Results to Display</h3>\n            )}\n        </Col>\n\n        <Col size=\"md-6 sm-12\">\n          <Jumbotron>\n            <h1>Books On My List</h1>\n          </Jumbotron>\n          {books.length ? (\n            <List>\n              {books.map(book => (\n                <ListItem key={book._id}>\n                  <strong>\n                    {book.title} by {book.author}\n                  </strong>\n                  <Description>\n                    {book.description}\n                  </Description>\n                  <DeleteBtn onClick={() => deleteBook(book._id)} />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n              <h3>No Saved Books to Display</h3>\n            )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Books;","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nfunction Detail(props) {\n  const [book, setBook] = useState({})\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  const {bookid} = useParams() // think useContext\n  useEffect(() => {\n    API.getBook(bookid)\n      .then(res => setBook(res.data))\n      .catch(err => console.log(err));\n  }, [bookid])\n\n  return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {book.title} by {book.author}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <p>\n                {book.synopsis}\n              </p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/\">← Back to Authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Detail;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React, { useContext } from 'react';\nimport LoginForm from '../components/LoginForm';\nimport {Redirect} from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\n\nfunction Login(props){\n    const {loggedIn} = useContext(UserContext);\n    return (\n        <div className=\"container\">\n            {loggedIn && <Redirect to=\"/\" />}\n            <h1>Login</h1>\n            <LoginForm className=\"full-page-login\" />\n        </div>\n    )\n}\nexport default Login;","import React, { Fragment, useContext, useRef } from 'react';\n// import \"./style.scss\";\nimport API from '../../utils/API';\nimport UserContext from '../../utils/UserContext';\n\nfunction SignUpForm(props) {\n    const { email, setEmail, loggedIn, setLoggedIn } = useContext(UserContext);\n    const emailInput = useRef();\n    const passwordInput = useRef();\n    let extraProps = {}\n    if (props.className) {\n        extraProps.className = props.className;\n    }\n    let emailId = props.className ? props.className + \"-signup-email\" : \"signup-email\";\n    let emailHelpId = props.className ? props.className + \"-signup-email-help\" : \"signup-email-help\";\n    let passwordId = props.className ? props.className + \"-signup-password\" : \"signup-password\";\n    const handleSubmit = event => {\n        // if the user hits enter or hits the button, this function will fire\n        event.preventDefault();\n        // console.log(\"submit happened\");\n        // console.log({ email: emailInput.current.value, password: passwordInput.current.value});\n        // API.testUserRouter()\n        // .then(data => {\n        //     console.log(data);\n        // })\n        // .catch(err => {\n        //     console.log(err);\n        // });\n        API.signup({ email: emailInput.current.value, password: passwordInput.current.value})\n            .then(data => {\n                // console.log(data);\n                setEmail(data.data.email);\n                setLoggedIn(true);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n    return (\n        <Fragment>\n            { (() => {\n                if (!loggedIn) {\n                    return (<form {...extraProps} onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor={emailId}>Email address</label>\n                            <input ref={emailInput} type=\"email\" className=\"form-control\" id={emailId} aria-describedby={emailHelpId} />\n                            <small id={emailHelpId} className=\"email-help-text form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor={passwordId}>Password</label>\n                            <input ref={passwordInput} type=\"password\" className=\"form-control\" id={passwordId} />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n                    </form>\n                    );\n                }\n                else {\n                    return <h3>{email}</h3>;\n                }\n            })()\n            }\n        </Fragment>\n    )\n}\n\nexport default SignUpForm;","import React, { useContext } from 'react';\nimport SignUpForm from '../components/SignUpForm';\nimport {Redirect} from 'react-router-dom';\nimport UserContext from '../utils/UserContext';\n\nfunction SignUp(props){\n    const {loggedIn} = useContext(UserContext);\n    return (\n        <div className=\"container\">\n            {loggedIn && <Redirect to=\"/\" />}\n            <h1>SignUp</h1>\n            <SignUpForm className=\"full-page-signup\" />\n        </div>\n    )\n}\nexport default SignUp;","import React, {useContext, useEffect} from 'react';\nimport API from '../utils/API';\nimport UserContext from '../utils/UserContext';\n\nfunction Logout(props){\n    const {setEmail, setLoggedIn} = useContext(UserContext);\n    useEffect( () => {\n        API.logout()\n        .then( data => {\n            setLoggedIn(false);\n            setEmail(\"\");\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }, [setEmail, setLoggedIn])\n    return (\n        <div><p>You are now logged out.</p></div>\n    )\n}\nexport default Logout;","import React, {useState} from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport UserContext from \"./utils/UserContext\";\nimport Nav from \"./components/Nav\";\n//Pages\nimport Books from \"./pages/Books\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport SignUp from \"./pages/SignUp\";\nimport Logout from \"./pages/Logout\";\n\n\nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  return (\n    <Router>\n      <UserContext.Provider value={{email, setEmail, loggedIn, setLoggedIn}}>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path={[\"/\", \"/books\"]}>\n              <Books />\n            </Route>\n            <Route exact path=\"/books/:bookid\">\n              <Detail />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <SignUp />\n            </Route>\n            <Route exact path=\"/logout\">\n              <Logout />\n            </Route>\n            <Route>\n              <NoMatch />\n            </Route>\n          </Switch>\n        </div>\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}